name: Test

on:
  push:
  workflow_dispatch:

jobs:
  env:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check Github env
        run: |
          echo github.event_name: ${{ github.event_name }}
          echo github.ref: ${{ github.ref }}
          echo github.sha: ${{ github.sha }}
          echo github.event.before: ${{ github.event.before }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: git log
        run: |
          git log -n 5

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          list-files: 'csv'
          filters: |
            any:
              - '**'

      - name: Show changes
        run: |
          echo ${{ steps.changes.outputs.any_files }}

  check:
    name: check-${{ matrix.problem }}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        problem: [pA, pB, pC]
    outputs:
      build-pdf: ${{ steps.env.outputs.pdf }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          list-files: 'csv'
          filters: |
            pdf:
              - ${{ matrix.problem }}/statement/*.jpg
              - ${{ matrix.problem }}/statement/index.md
              - ${{ matrix.problem }}/problem.json
              - template.tex
            cover:
              - cover.tex

      - name: Set env
        if: steps.changes.outputs.pdf == 'true'
        id: env
        run: |
          echo "Checking pdf"
          echo "::set-output name=pdf::"${{ matrix.problem }}

  build-pdf:
    name: build-pdf-${{ matrix.problem }}
    needs: check
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        problem: [pA, pB, pC]
    steps:
      - uses: actions/checkout@v2

      # - name: Install tps
      #   run: |
      #     git clone --depth 1 https://github.com/ioi-2017/tps.git
      #     cd tps && sudo ./install-tps.sh
      - name: env
        run: |
          echo ${{ format('needs.check-{0}.outputs.build-pdf', matrix.problem) }}
          echo ${{ matrix.problem }}
          echo ${{ ${{ format('needs.check-{0}.outputs.build-pdf', matrix.problem) }} }}

      - name: Build pdf
        if: ${{ format('needs.check-{0}.outputs.build-pdf', matrix.problem) }} != ${{ matrix.problem }}
        working-directory: ${{ matrix.problem }}
        run: |
          echo "Building ${{ matrix.problem }}"

  verify:
    name: verify-${{ matrix.problem }}
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        problem: [pA, pB, pC]

    steps:
      - uses: actions/checkout@v2

      - name: Install tps
        run: |
          git clone --depth 1 https://github.com/ioi-2017/tps.git
          cd tps && sudo ./install-tps.sh

      - name: Verify ${{ matrix.problem }}
        working-directory: ${{ matrix.problem }}
        run: |
          tps verify
